name: Build Mobile APK

on:
  push:
    branches: [mobile-app]
  pull_request:
    branches: [mobile-app]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Android APK

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: mobile-app/package-lock.json

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: npm

      - name: Install dependencies
        timeout-minutes: 10
        run: |
          cd mobile-app
          npm install --legacy-peer-deps

      - name: Generate icon
        run: |
          cd mobile-app
          npm run generate-icon

      - name: Setup EAS Project
        timeout-minutes: 5
        run: |
          cd mobile-app
          echo "Checking authentication status..."
          eas whoami
          echo "Verifying project configuration..."
          eas project:info || eas project:init --non-interactive
          echo "Project setup completed"

      - name: Run linting
        timeout-minutes: 5
        run: |
          cd mobile-app
          npx eslint .

      - name: Run type checking
        timeout-minutes: 5
        run: |
          cd mobile-app
          npm run type-check

      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Prebuild Android Project
        timeout-minutes: 10
        run: |
          cd mobile-app
          echo "Prebuilding Android project..."
          npx expo prebuild --platform android --clean

      - name: Build Android APK (Direct)
        timeout-minutes: 15
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          cd mobile-app
          echo "Building Android APK directly with Gradle..."
          cd android
          ./gradlew assembleRelease --no-daemon --stacktrace

      - name: Locate and Prepare APK
        timeout-minutes: 5
        run: |
          cd mobile-app
          echo "Locating and preparing APK..."

          # Look for APK in Gradle output location
          APK_PATH="android/app/build/outputs/apk/release/app-release.apk"

          if [ -f "$APK_PATH" ]; then
            echo "APK found at: $APK_PATH"
            # Rename APK to expected name
            cp "$APK_PATH" "sad-las-worker.apk"
            echo "APK_PATH=sad-las-worker.apk" >> $GITHUB_ENV
            ls -la "sad-las-worker.apk"
            echo "APK renamed and ready for release"
          else
            echo "APK not found in expected location. Searching..."
            find android -name "*.apk" -type f || echo "No APK files found"
            exit 1
          fi

      - name: Get version info
        id: version
        run: |
          cd mobile-app
          VERSION=$(node -p "require('./package.json').version")
          BUILD_NUMBER=$(date +%Y%m%d%H%M)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION-mobile-$BUILD_NUMBER" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: mobile-app/${{ env.APK_PATH }}
          retention-days: 30

      - name: Create Release
        if: github.ref == 'refs/heads/mobile-app' && github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: "SAD LAS Worker v${{ steps.version.outputs.version }} (Build ${{ steps.version.outputs.build_number }})"
          body: |
            ## 📱 SAD LAS Worker - Aplicación Móvil

            ### 📦 Descarga
            Descarga el archivo **sad-las-worker.apk** desde los assets de este release para instalar la aplicación en tu dispositivo Android.

            ### 📋 Información de la Build
            - **Versión**: ${{ steps.version.outputs.version }}
            - **Build**: ${{ steps.version.outputs.build_number }}
            - **Commit**: ${{ github.sha }}
            - **Rama**: ${{ github.ref_name }}
            - **Fecha**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")

            ### 🔧 Instalación
            1. Descarga el archivo `sad-las-worker.apk`
            2. En tu dispositivo Android, ve a **Configuración > Seguridad**
            3. Habilita **"Fuentes desconocidas"** o **"Instalar aplicaciones desconocidas"**
            4. Abre el archivo APK descargado e instala la aplicación

            ### 📝 Cambios Recientes
            ${{ github.event.head_commit.message }}

            ### ⚠️ Notas Importantes
            - Esta es una versión de desarrollo/testing
            - Probar todas las funcionalidades antes de usar en producción
            - Reportar cualquier problema en los Issues del repositorio

            ---

            **🤖 Generado automáticamente por GitHub Actions**
          files: |
            mobile-app/sad-las-worker.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
